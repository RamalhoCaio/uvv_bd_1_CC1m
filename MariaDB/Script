# LOGIN DO SUPERUSUÁRIO ROOT:
mysql -u root -p
computacao@raiz

#  CRIAR O BANCO DE DADOS:
create database uvv
character set UTF8mb4
collate utf8mb4_bin;

# CRIANDO USUARIO:
create user caio identified by '123456';
grant all privileges on uvv.* to caio;

# SELECIONAR O USUARIO:
system mysql -u caio -p
123456

# ATIVANDO O BANCO DE DADOS uvv:
use uvv;




CREATE TABLE Funcionario (
                cpf CHAR(11) NOT NULL,
                primeiro_nome VARCHAR(15) NOT NULL,
                nome_meio CHAR(1),
                ultimo_nome VARCHAR(15) NOT NULL,
                data_nascimento DATE,
                endereco VARCHAR(40),
                sexo CHAR(1),
                salario DECIMAL(10,2),
                cpf_supervisor CHAR(11) NOT NULL,
                Numero_departamento INT NOT NULL,
                PRIMARY KEY (cpf)
);

ALTER TABLE Funcionario COMMENT 'Tabela que armazena as informações dos funcionários.';

ALTER TABLE Funcionario MODIFY COLUMN cpf CHAR(11) COMMENT 'CPF do funcionário. Será a PK da tabela.';

ALTER TABLE Funcionario MODIFY COLUMN nome_meio CHAR(1) COMMENT 'Inicial do nome do meio.';

ALTER TABLE Funcionario MODIFY COLUMN ultimo_nome VARCHAR(15) COMMENT 'Sobrenome do funcionário.';

ALTER TABLE Funcionario MODIFY COLUMN endereco VARCHAR(40) COMMENT 'Endereço do funcionário.';

ALTER TABLE Funcionario MODIFY COLUMN sexo CHAR(1) COMMENT 'Sexo do funcionário.';

ALTER TABLE Funcionario MODIFY COLUMN salario DECIMAL(10, 2) COMMENT 'Salário do funcionário.';

ALTER TABLE Funcionario MODIFY COLUMN cpf_supervisor CHAR(11) COMMENT 'o-relacionamento).';

ALTER TABLE Funcionario MODIFY COLUMN Numero_departamento INTEGER COMMENT 'Número do departamento do funcionário.';


CREATE TABLE Dependente (
                cpf_funcionario_dependente CHAR(11) NOT NULL,
                nome_dependente VARCHAR(15) NOT NULL,
                sexo CHAR(1),
                data_nascimento DATE,
                parentesco VARCHAR(15) NOT NULL,
                PRIMARY KEY (cpf_funcionario_dependente, nome_dependente)
);

ALTER TABLE Dependente COMMENT 'Tabela que armazena as informações dos dependentes dos funcionários.';

ALTER TABLE Dependente MODIFY COLUMN cpf_funcionario_dependente CHAR(11) COMMENT 'para a tabela funcionário.';

ALTER TABLE Dependente MODIFY COLUMN nome_dependente VARCHAR(15) COMMENT 'Nome do dependente. Faz parte da PK desta tabela.';

ALTER TABLE Dependente MODIFY COLUMN sexo CHAR(1) COMMENT 'Sexo do dependente.';

ALTER TABLE Dependente MODIFY COLUMN data_nascimento DATE COMMENT 'Data de nascimento do dependente.';

ALTER TABLE Dependente MODIFY COLUMN parentesco VARCHAR(15) COMMENT 'Descrição do parentesco do dependente com o funcionário.';


CREATE TABLE Departamento (
                numero_departamento INT NOT NULL,
                nome_departamento VARCHAR(15) NOT NULL,
                cpf_gerente CHAR(11) NOT NULL,
                data_inicio_gerente DATE,
                PRIMARY KEY (numero_departamento)
);

ALTER TABLE Departamento COMMENT 'Tabela que armazena as informaçoẽs dos departamentos.';

ALTER TABLE Departamento MODIFY COLUMN numero_departamento INTEGER COMMENT 'Número do departamento. É a PK desta tabela.';

ALTER TABLE Departamento MODIFY COLUMN nome_departamento VARCHAR(15) COMMENT 'Nome do departamento. Deve ser único.';

ALTER TABLE Departamento MODIFY COLUMN cpf_gerente CHAR(11) COMMENT 'onários.';

ALTER TABLE Departamento MODIFY COLUMN data_inicio_gerente DATE COMMENT 'Data do início do gerente no departamento.';


CREATE UNIQUE INDEX nome_departamento_idx
 ON Departamento
 ( nome_departamento ASC );

CREATE TABLE localizacoes_departamento (
                numero_departamento INT NOT NULL,
                local VARCHAR(15) NOT NULL,
                PRIMARY KEY (numero_departamento, local)
);

ALTER TABLE localizacoes_departamento COMMENT 'Tabela que armazena as possíveis localizações dos departamentos.';

ALTER TABLE localizacoes_departamento MODIFY COLUMN numero_departamento INTEGER COMMENT 'm é uma FK para a tabela departamento.';

ALTER TABLE localizacoes_departamento MODIFY COLUMN local VARCHAR(15) COMMENT 'Localização do departamento. Faz parte da PK desta tabela.';


CREATE TABLE projeto (
                numero_projeto INT NOT NULL,
                nome_projeto VARCHAR(15) NOT NULL,
                local_projeto VARCHAR(15),
                numero_departamento INT NOT NULL,
                PRIMARY KEY (numero_projeto)
);

ALTER TABLE projeto COMMENT 'Tabela que armazena as informações sobre os projetos dos departamentos.';

ALTER TABLE projeto MODIFY COLUMN numero_projeto INTEGER COMMENT 'Número do projeto. É a PK desta tabela.';

ALTER TABLE projeto MODIFY COLUMN nome_projeto VARCHAR(15) COMMENT 'Nome do projeto. Deve ser único.';

ALTER TABLE projeto MODIFY COLUMN local_projeto VARCHAR(15) COMMENT 'Localização do projeto.';

ALTER TABLE projeto MODIFY COLUMN numero_departamento INTEGER COMMENT 'Número do departamento. É uma FK para a tabela departamento.';


CREATE UNIQUE INDEX nome_projeto_idx
 ON projeto
 ( nome_projeto ASC );

CREATE TABLE trabalha_em (
                cpf_funcionario_trabalha_em CHAR(11) NOT NULL,
                numero_projeto INT NOT NULL,
                horas DECIMAL(3,1) NOT NULL,
                PRIMARY KEY (cpf_funcionario_trabalha_em, numero_projeto)
);

ALTER TABLE trabalha_em COMMENT 'Tabela para armazenar quais funcionários trabalham em quais projetos.';

ALTER TABLE trabalha_em MODIFY COLUMN cpf_funcionario_trabalha_em CHAR(11) COMMENT 'para a tabela funcionário.';

ALTER TABLE trabalha_em MODIFY COLUMN numero_projeto INTEGER COMMENT 'ara a tabela projeto.';

ALTER TABLE trabalha_em MODIFY COLUMN horas DECIMAL(3, 1) COMMENT 'Horas trabalhadas pelo funcionário neste projeto.';


ALTER TABLE Funcionario ADD CONSTRAINT funcionario_funcionario_fk
FOREIGN KEY (cpf_supervisor)
REFERENCES Funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE Departamento ADD CONSTRAINT funcionario_departamento_fk
FOREIGN KEY (cpf_gerente)
REFERENCES Funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE Dependente ADD CONSTRAINT funcionario_dependente_fk
FOREIGN KEY (cpf_funcionario_dependente)
REFERENCES Funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE trabalha_em ADD CONSTRAINT funcionario_trabalha_em_fk
FOREIGN KEY (cpf_funcionario_trabalha_em)
REFERENCES Funcionario (cpf)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE Funcionario ADD CONSTRAINT departamento_funcionario_fk
FOREIGN KEY (Numero_departamento)
REFERENCES Departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE projeto ADD CONSTRAINT departamento_projeto_fk
FOREIGN KEY (numero_departamento)
REFERENCES Departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE localizacoes_departamento ADD CONSTRAINT departamento_localizacoes_departamento_fk
FOREIGN KEY (numero_departamento)
REFERENCES Departamento (numero_departamento)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE trabalha_em ADD CONSTRAINT projeto_trabalha_em_fk
FOREIGN KEY (numero_projeto)
REFERENCES projeto (numero_projeto)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

INSERT INTO funcionario VALUES 
   (
   "33344555587", "Fernando", "T", "Wong", '1955-12-08', "Rua da Lapa, 34, São Paulo, SP", "M", 40.000, 33344555587, 5 
),
   (
     "88866555576" , "Jorge", "E", "Brito", '1937-11-10', "Rua do Horto, 35, São Paulo, SP ", "M", 55.000, 88866555576, 1 
),
   (
   "12345678966", "João", "B", "Silva", '1965.11.09', "Rua das Flores, 751, São Paulo, SP", "M", 30.000, 33344555587, 5 
), 
   (
     "98765432168" , "Jennifer", "S", "Souza", '1941-06-20', "Av.Arthur de Lima, 54, Santo André, SP", "F", 43.000, 88866555576, 4
), 
   (
     "99988777767" , "Alice", "J", "Zelaya", '1968-01-19', "Rua Souza Lima, 35 ,Curitiba< PR", "F", 25.000, 98765432168, 4
),   
   (
     "66688444476" , "Ronaldo", "K", "Lima", '1962-09-15', "Rua Rebouças, 65, Piracicaba, SP", "M", 38.000, 33344555587, 5 
),
   (
     "45345345376" , "Joice", "A", "Leite", '1972-07-31', "Av.Lucas Obes, 74, São Paulo, SP", "F", 25.000, 33344555587, 5 
),
   (
     "98798798733" , "André", "V", "Pereira", '1969-03-29', "Rua Timbira, 35, São Paulo, SP", "M", 25.000, 98765432168, 4 
);

INSERT INTO departamento VALUES (
      5, "Pesquisa", "33344555587", '1988-05-22'
),
   (
       4, "Administração", "98765432168", '1995-01-01'
),
   (
       1, "Matriz", "88866555576", '1981-06-19'
);

INSERT INTO localizacoes_departamento VALUES (
       1, "São Paulo"
),
   (
       4, "Mauá"
),
   (
       5, "Santo André"
),
   (
       5, "Itu"
),
   (
       5, "São Paulo"
);

INSERT INTO projeto VALUES (
       1, "ProdutoX", "Santo André", 5 
),
   (
       2, "ProdutoY", "Itu", 5 
),
   (
       3, "ProdutoZ", "São Paulo", 5
),
   (
       10, "Informatização", "Mauá", 4
),
   (
       20, "Reotganização", "São Paulo", 1
),
   (
       30, "Novosbenefícios", "Mauá", 4
);

INSERT INTO dependente VALUES (
       "33344555587", "Alicia", "F", '1986-04-05', "Filha"
),
   (
       "33344555587", "Tiago", "M", '1983-10-25', "Filho"
),
   (
       "33344555587", "Janaína", "F", '1958-05-03', "Esposa"
),
   (
       "98765432168", "Antonio", "M", '1942-02-18', "Marido"
),
   (
       "12345678966", "Michael", "M", '1988-01-04', "Filho"
),
   (
       "12345678966", "Alicia", "F", '1988-12-30', "Filha"
),
   (
       "12345678966", "Elizabeth", "F", '1967-05-05', "Esposa"
);


INSERT INTO trabalha_em VALUES (
       "12345678966", 1, 32.5
),
   (
       "12345678966", 2, 7.5
),
   (
       "66688444476", 3, 40.0
),
   (
       "45345345376", 1, 20.0
),
   (
       "45345345376", 2, 20.0
),
   (
       "33344555587", 2, 10.0
),
   (
       "33344555587", 3, 10.0
),
   (
       "33344555587", 10, 10.0
),
   (
       "33344555587", 20, 10.0
),
   (
       "99988777767", 30, 30.0
),
   (
       "99988777767", 10, 10.0
),
   (
       "98798798733", 10, 35.0
),
   (
       "98798798733", 30, 5.0
),
   (
       "98765432168", 30, 20.0
),
   (
       "98765432168", 20, 15.0
),
   (
       "88866555576", 20, 0
);


## Solucao de problema entre relacionamento das tabelas funcionario e departamento
ALTER TABLE funcionario
ADD FOREIGN KEY (numero_departamento)
REFERENCES departamento (numero_departamento)
;
